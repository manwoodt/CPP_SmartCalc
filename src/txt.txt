static constexpr bool kAdjacencyMatrix_[kNumTokenTypes][kNumTokenTypes] = {
{0, 1, 0, 1, 0, 0, 1}, // kNumber
{1, 0, 1, 0, 1, 1, 0}, // kBinaryOperator
{1, 0, 1, 0, 1, 1, 0}, // kUnaryPrefixOperator
{0, 1, 0, 1, 0, 0, 13}, // kUnaryPostfixOperator
{0, 0, 2, 0, 0, 1, 0}, // kUmaryFunction
{1, 0, 4, 0, 1, 1, 0}, // kOpenBracket
{0, 1, 0, 1, 0, 0, 1}, // kCloseBracket
};
for (; !output_.empty() && !input_.empty(); MoveTokenFromInputTooutput()) {
if (!kAdjacencyMatrix_[output_.back().GetType()]
[input_.front().GetType()]) {
throw std::logic_error("Wrong sequence: " + output_.back().GetName() +
+ input_.front().GetName());
}
}

bool kSuitableTypesMatrix_[kNumTokenTypes][kNumTokenTypes] = {
{0, 0?, 1, 0, 0, 1}, //kNumber ./
{1, 0, 0, 1, 1, 0}, //kUnaryOperator ./
{1, 0, 0, 1, 1, 0}, //kBinaryOperator ./
{0, 0, 0, 0, 1, 0}, //kUnaryFunction ./
{1, 1, 0, 1, 1, 0}, //kOpenBracket ./
{0, 0, 1, 0, 0, 1};//kCloseBracket ./
}